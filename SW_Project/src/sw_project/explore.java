/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sw_project;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import static java.awt.SystemColor.TEXT;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import rounded_label.JLabelRound;

/**
 *
 * @author LENOVO
 */
public class explore extends javax.swing.JFrame {

    /**
     * Creates new form explore
     */
    JPanel postbase = new JPanel();
    String usernameorigin = "saja123"; //get this value from login page
    boolean likeflag = false;//*************** to know if the user has been liked the post or not
    boolean saveflag = false;//*************** to know if the user has been saved the post or not

    public explore() {

        initComponents();
        scrollPane1.add(postbase);
        this.setLocationRelativeTo(null);
        close.setIcon(new ImageIcon(getClass().getResource("/images0/x1.png")));
        min.setIcon(new ImageIcon(getClass().getResource("/images0/min1.png")));
        back.setIcon(new ImageIcon(getClass().getResource("/images0/back3.png")));
        search.setIcon(new ImageIcon(getClass().getResource("/images0/explore0.png")));
        out.setIcon(new ImageIcon(getClass().getResource("/images0/out.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        base = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        search = new javax.swing.JLabel();
        out = new javax.swing.JLabel();
        TEXT = new javax.swing.JTextField();
        scrollPane1 = new java.awt.ScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        base.setBackground(new java.awt.Color(9, 16, 69));

        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        min.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });

        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(244, 216, 19));

        jPanel4.setBackground(new java.awt.Color(18, 33, 139));

        jPanel5.setBackground(new java.awt.Color(244, 216, 19));

        jPanel6.setBackground(new java.awt.Color(18, 33, 139));

        jPanel7.setBackground(new java.awt.Color(18, 33, 139));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/mainpage.jpeg"))); // NOI18N

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        search.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        out.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        TEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTActionPerformed(evt);
            }
        });
        TEXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TEXTKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(out, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(out, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout baseLayout = new javax.swing.GroupLayout(base);
        base.setLayout(baseLayout);
        baseLayout.setHorizontalGroup(
            baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(baseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(baseLayout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 929, Short.MAX_VALUE)
                        .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        baseLayout.setVerticalGroup(
            baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(baseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(base, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(base, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        // close
        this.dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        // min
        this.setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        this.dispose();
        // new mainpage22().setVisible(true);
    }//GEN-LAST:event_backMouseClicked

    private void TEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTActionPerformed

    private void TEXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TEXTKeyPressed
        JPanel jhh = new JPanel();
        String usenamepost = null;
        postbase.setLayout(new BoxLayout(postbase, BoxLayout.Y_AXIS));
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!TEXT.getText().equals("")) {
                //******************get first char to know if he wants to search for username or posts
                String name = TEXT.getText();
                char firstchar = name.charAt(0);
                if (firstchar == '#') {
                    try {
                        Boolean flag = true;
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sys", "root", "123456");
                        Statement stt = con.createStatement();
                        String search = "select idhashtag from hashtag where keyword='" + this.TEXT.getText() + "'";
                        ResultSet rs = null;
                        rs = stt.executeQuery(search);
                        while (rs.next()) {
                            int hash = rs.getInt("idhashtag");
                            Statement stt2 = con.createStatement();
                            String sql2 = "select idpost from post_hashtag where idhashtag='" + rs.getInt("idhashtag") + "'";
                            ResultSet rs2 = stt2.executeQuery(sql2);
                            while (rs2.next()) {
                                Statement stt3 = con.createStatement();
                                String sql3 = "select * from post where idpost='" + rs2.getInt("idpost") + "'";
                                ResultSet rs3 = stt3.executeQuery(sql3);
                                while (rs3.next()) {
                                    usenamepost = rs3.getString("username");
                                    System.out.println("userrrname " + rs3.getString("username"));
                                    String content = rs3.getString("content");
                                    String description = rs3.getString("description");
                                    String idpost = String.valueOf(rs3.getInt("idpost"));
                                    String keyword = "";

                                    //***********************open post_hashtag table then hashtag to get the keywords:
                                    String sql4 = "select * from post_hashtag where idpost = '" + idpost + "'";
                                    Statement st4 = con.createStatement();
                                    ResultSet rs4 = st4.executeQuery(sql4);
                                    while (rs4.next()) {
                                        String idpost2 = String.valueOf(rs3.getInt("idpost"));
                                        if (idpost.equals(idpost2)) {
                                            String idhastag1 = String.valueOf(rs4.getInt("idhashtag"));
                                            System.out.println("hashhhhhhhh: " + idhastag1);

                                            //*********open hashtag:
                                            String sql5 = "select * from hashtag where idhashtag ='" + idhastag1 + "'";
                                            Statement st5 = con.createStatement();
                                            ResultSet rs5 = st5.executeQuery(sql5);
                                            while (rs5.next()) {
                                                String idhastag2 = String.valueOf(rs5.getInt("idhashtag"));
                                                if (idhastag2.equals(idhastag1)) {
                                                    keyword = rs5.getString("keyword");
                                                    System.out.println("keyyy: " + idhastag1);

                                                }//if idhashtag==idhashtag
                                            }//while
                                        }//if (idpost==idpost

                                    }//while

                                    jhh.setLayout(null);//new FlowLayout());

                                    //**********************add the jpanel in which the post will be displayed on
                                    jhh.setPreferredSize(new Dimension(this.scrollPane1.getWidth(), 450));
                                    jhh.setBackground(new java.awt.Color(255, 255, 255));//18, 33, 139));//blue
                                    postbase.add(jhh);

                                    //**********************************************************************************************
                                    //********************create rounded jlabel to dispaly user photo on it:
                                    JLabelRound rondlabel = new JLabelRound();
                                    rondlabel.setBounds(10, 10, 60, 60);//******(left/right, up/down, width,height)
                                    rondlabel.setOpaque(true);
                                    rondlabel.setBackground(new java.awt.Color(250, 250, 250));
                                    rondlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

                                    //********************Open appuser table then person table to get his/her photo:
                                    String sql6 = "select * from appuser";
                                    Statement st6 = con.createStatement();
                                    ResultSet rs6 = st6.executeQuery(sql6);
                                    while (rs6.next()) {
                                        String appuser_username = rs6.getString("username");
                                        if (appuser_username.equals(usenamepost)) {

                                            String email = rs6.getString("email");
                                            String sql7 = "select * from person";
                                            Statement st7 = con.createStatement();
                                            ResultSet rs7 = st7.executeQuery(sql7);
                                            while (rs7.next()) {
                                                if (email.equals(rs7.getString("email"))) {
                                                    System.out.println("hi: " + rs7.getString("email"));
                                                    //*********************** change scale for icon to fit the roundedlabel:
                                                    Icon icon2 = new ImageIcon(rs7.getString("image"));
                                                    System.out.println("hi: " + rs7.getString("image"));
                                                    ImageIcon imgicon2 = new ImageIcon(rs7.getString("image"));
                                                    Image img2 = imgicon2.getImage();
                                                    Image imgscale2 = img2.getScaledInstance(rondlabel.getWidth(), rondlabel.getHeight(), Image.SCALE_SMOOTH);
                                                    ImageIcon scaledIcon2 = new ImageIcon(imgscale2);
                                                    rondlabel.setIcon(scaledIcon2);

                                                }
                                            }//while (person table
                                        }//if(appusername==following)

                                    }//while appuser table

                                    jhh.add(rondlabel);
                                    //**********************************************************************************************

                                    //********************create jlabel to display username post:
                                    JLabel label2 = new JLabel(usenamepost);
                                    label2.setBounds(80, 15, 100, 30);//******(left/right, up/down, width,height)
                                    label2.setOpaque(true);
                                    label2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                    label2.setBackground(new java.awt.Color(255, 255, 255));
                                    label2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
                                    label2.setForeground(new java.awt.Color(18, 33, 139));
                                    //   label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                    /////////////////////////////////////////////////////////
                                    label2.addMouseListener(new MouseAdapter() {
                                        public void mouseClicked(MouseEvent e) {
                                            //   String idpost = ((JButton) e.getSource()).getName();
                                            new otherusers22(idpost).setVisible(true);
                                            dispose();
                                        }
                                    });
                                    /////////////////////////////////////////////////////////

                                    jhh.add(label2);

                                    //**********************************************************************************************
                                    //********************display content:
                                    JLabel label1 = new JLabel(idpost);
                                    label1.setBounds(10, 70, 350, 300); //size.width, size.height);//******(left/right, up/down, width,height)
                                    //*********************** change scale for icon to fit the label:
                                    Icon icon = new ImageIcon(content);
                                    ImageIcon imgicon = new ImageIcon(content);
                                    Image img = imgicon.getImage();
                                    Image imgscale = img.getScaledInstance(label1.getWidth(), label1.getHeight(), Image.SCALE_SMOOTH);
                                    ImageIcon scaledIcon = new ImageIcon(imgscale);
                                    label1.setIcon(scaledIcon);
                                    label1.setOpaque(true);
                                    label1.setBackground(new java.awt.Color(250, 250, 250));
                                    jhh.add(label1);

                                    //******************** add mouse listner in order to like the post:
                                    //label1.addMouseListener(mouseListener);
                                    //**********************************************************************************************
                                    //********************add jtextarea to add the desc.
                                    JTextArea textarea1 = new JTextArea(description + "\n" + keyword);
                                    textarea1.setLineWrap(true);
                                    textarea1.setWrapStyleWord(true);
                                    textarea1.setBounds(365, 70, 330, 300);//******(left/right, up/down, width,height)
                                    textarea1.setOpaque(true);
                                    textarea1.setBackground(new java.awt.Color(255, 255, 255));
                                    textarea1.setEditable(false);
                                    textarea1.setColumns(20);
                                    textarea1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
                                    textarea1.setForeground(new java.awt.Color(0, 0, 0));//18, 33, 139));
                                    textarea1.setRows(5);
                                    textarea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(18, 33, 139), 2));
                                    // textarea1.setSelectionColor(new java.awt.Color(244, 216, 19));
                                    jhh.add(textarea1);

                                    //**********************************************************************************************
                                    //********************* create view likes button:
                                    JLabel like = new JLabel(idpost);
                                    like.setBounds(10, 375, 70, 70);
                                    like.setOpaque(true);

                                    like.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                    like.setHorizontalAlignment(SwingConstants.CENTER);
                                    like.setVerticalAlignment(SwingConstants.CENTER);

                                    //*********************** change scale for icon to fit the label:
                                    //********************* open likes table verfiy if user like this post or not:
                                    String sql8 = "select * from likes";

                                    Statement st8 = con.createStatement();
                                    ResultSet rs8 = st8.executeQuery(sql8);
                                    ImageIcon imgicon1 = new ImageIcon(getClass().getResource("/images0/emptyh.png"));
                                    while (rs8.next()) {
                                        if (String.valueOf(rs8.getInt("idpost")).equals(idpost)) {
                                            if (rs8.getString("username").equals(usenamepost)) {
                                                if (rs8.getString("userlike").equals(usernameorigin)) {
                                                    System.out.println("well here we go...");
                                                    imgicon1 = new ImageIcon(getClass().getResource("/images0/like.png"));
                                                    likeflag = true;
                                                }
                                            }
                                        }

                                    }

                                    //imgicon1 = new ImageIcon(getClass().getResource("/images0/emptyh.png"));
                                    Image img1 = imgicon1.getImage();
                                    Image imgscale1 = img1.getScaledInstance(like.getWidth(), like.getHeight(), Image.SCALE_SMOOTH);
                                    ImageIcon scaledIcon1 = new ImageIcon(imgscale1);
                                    like.setIcon(scaledIcon1);
                                    like.setOpaque(true);
                                    like.setBackground(new java.awt.Color(255, 255, 255));
                                    like.setToolTipText("Like.");
                                    //******************** add mouse listner in order to like the post:
                                    like.addMouseListener(mouseListener);
                                    //  like.addMouseListener(mouseListener);

                                    jhh.add(like);
                                    //********************************view likeeee
                                    JLabel viewlike = new JLabel(idpost);
                                    viewlike.setBounds(90, 375, 70, 70);
                                    viewlike.setOpaque(true);

                                    viewlike.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                    viewlike.setHorizontalAlignment(SwingConstants.CENTER);
                                    viewlike.setVerticalAlignment(SwingConstants.CENTER);
                                    ImageIcon imgicon4 = new ImageIcon(getClass().getResource("/images0/emptyh.png"));
                                    Image img4 = imgicon4.getImage();
                                    Image imgscale4 = img4.getScaledInstance(viewlike.getWidth(), viewlike.getHeight(), Image.SCALE_SMOOTH);
                                    ImageIcon scaledIcon4 = new ImageIcon(imgscale4);
                                    viewlike.setIcon(scaledIcon4);
                                    viewlike.setOpaque(true);
                                    viewlike.setBackground(new java.awt.Color(255, 255, 255));
                                    viewlike.setToolTipText("view Like.");
                                    //******************** add mouse listner in order to like the post:
                                    viewlike.addMouseListener(new MouseAdapter() {
                                        public void mouseClicked(MouseEvent e) {
                                            //   String idpost = ((JButton) e.getSource()).getName();
                                            new Likes(idpost).setVisible(true);

                                        }
                                    });

                                    jhh.add(viewlike);
                                    //**********************************************************************************************
                                    //********************* create add comment button:
                                    JLabel comm = new JLabel();
                                    comm.setBounds(170, 375, 70, 70);
                                    comm.setOpaque(true);

                                    comm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                    comm.setHorizontalAlignment(SwingConstants.CENTER);
                                    comm.setVerticalAlignment(SwingConstants.CENTER);

                                    //*********************** change scale for icon to fit the label:
                                    //Icon icon2=new ImageIcon(getClass().getResource("images0/heart.png"));
                                    ImageIcon imgicon2 = new ImageIcon(getClass().getResource("/images0/comm1.png"));
                                    Image img2 = imgicon2.getImage();
                                    Image imgscale2 = img2.getScaledInstance(like.getWidth(), like.getHeight(), Image.SCALE_SMOOTH);
                                    ImageIcon scaledIcon2 = new ImageIcon(imgscale2);
                                    comm.setIcon(scaledIcon2);
                                    comm.setOpaque(true);
                                    comm.setBackground(new java.awt.Color(250, 250, 250));
                                    comm.setToolTipText("Comment.");
                                    comm.addMouseListener(new MouseAdapter() {
                                        public void mouseClicked(MouseEvent e) {
                                            //   String idpost = ((JButton) e.getSource()).getName();
                                            new Comments(idpost, usernameorigin).setVisible(true);

                                        }
                                    });
                                    //  comm.addMouseListener(mouseListener);

                                    jhh.add(comm);

                                    //**********************************************************************************************
                                    //********************* create save button:
                                    JLabel save = new JLabel(idpost);
                                    save.setBounds(630, 375, 70, 70);//(170, 375, 70, 70);
                                    save.setOpaque(true);

                                    save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                    save.setHorizontalAlignment(SwingConstants.CENTER);
                                    save.setVerticalAlignment(SwingConstants.CENTER);

                                    //*********************** change scale for icon to fit the label:
                                    //ImageIcon imgicon3 = new ImageIcon(getClass().getResource("/images0/saved.png"));
                                    //********************* open likes table verfiy if user like this post or not:
                                    String sql7 = "select * from savepost";
                                    Statement st7 = con.createStatement();
                                    ResultSet rs7 = st7.executeQuery(sql7);
                                    ImageIcon imgicon3 = new ImageIcon(getClass().getResource("/images0/unsaved.png"));
                                    while (rs7.next()) {
                                        if (String.valueOf(rs7.getInt("idpost")).equals(idpost)) {
                                            if (rs7.getString("username").equals(usernameorigin)) {
                                                System.out.println("well here we go22...");
                                                imgicon3 = new ImageIcon(getClass().getResource("/images0/saved.png"));
                                                saveflag = true;

                                            }
                                        }

                                    }
                                    Image img3 = imgicon3.getImage();
                                    Image imgscale3 = img3.getScaledInstance(like.getWidth(), like.getHeight(), Image.SCALE_SMOOTH);
                                    ImageIcon scaledIcon3 = new ImageIcon(imgscale3);
                                    save.setIcon(scaledIcon3);
                                    save.setOpaque(true);
                                    save.setBackground(new java.awt.Color(250, 250, 250));
                                    save.setToolTipText("save.");
                                    save.addMouseListener(mouseListenersave);
                                    jhh.add(save);

                                    //**********************************************************************************************
                                    //********************create new jpanel:
                                    jhh = new JPanel();
                                    jhh.setVisible(true);
                                    flag = false;
                                    if (!flag) {
                                        flag = true;
                                        jhh.setBackground(new java.awt.Color(240, 240, 240));
                                        jhh.setPreferredSize(new Dimension(10, 15));
                                        postbase.add(jhh);
                                        jhh = new JPanel();
                                        jhh.setVisible(true);
                                    }//inner if

                                    //con.close();
                                }//while rs3
                            }//while

                        }//while

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(TEXT, "Opps! There is no matches");
                        Logger.getLogger(mainpage22.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }//if firstchar=='#'
                //**************** search for username:
                else {

                    try {
                        Boolean flag = true;
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sys", "root", "123456");
                        Statement stt = con.createStatement();
                        String sql1 = "select * from appuser where username='" + this.TEXT.getText() + "'";
                        ResultSet rs1 = stt.executeQuery(sql1);

                        if (rs1.next()) {

                            jhh.setLayout(null);//new FlowLayout());
                            jhh.setBackground(Color.red);
                            postbase.setBackground(Color.ORANGE);
                            //**********************add the jpanel in which the post will be displayed on
                            jhh.setPreferredSize(new Dimension(this.scrollPane1.getWidth(), 450));
                            jhh.setBackground(new java.awt.Color(255, 255, 255));//18, 33, 139));//blue
                            postbase.add(jhh);

                            //**********************************************************************************************
                            //********************create rounded jlabel to dispaly user photo on it:
                            JLabelRound rondlabel = new JLabelRound();
                            rondlabel.setBounds(10, 10, 60, 60);//******(left/right, up/down, width,height)
                            rondlabel.setOpaque(true);
                            rondlabel.setBackground(new java.awt.Color(250, 250, 250));
                            rondlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

                            String sql7 = "select * from person where email= '" + rs1.getString("email") + "'";
                            Statement st7 = con.createStatement();
                            ResultSet rs7 = st7.executeQuery(sql7);
                            if (rs7.next()) {
                                //*********************** change scale for icon to fit the roundedlabel:
                                Icon icon2 = new ImageIcon(rs7.getString("image"));
                                System.out.println("hi: " + rs7.getString("image"));
                                ImageIcon imgicon2 = new ImageIcon(rs7.getString("image"));
                                Image img2 = imgicon2.getImage();
                                Image imgscale2 = img2.getScaledInstance(rondlabel.getWidth(), rondlabel.getHeight(), Image.SCALE_SMOOTH);
                                ImageIcon scaledIcon2 = new ImageIcon(imgscale2);
                                rondlabel.setIcon(scaledIcon2);

                                jhh.add(rondlabel);
                                //**********************************************************************************************

                                //********************create jlabel to display username post:
                                String usernamee = rs1.getString("username");
                                JLabel label2 = new JLabel(rs1.getString("username"));
                                label2.setBounds(80, 15, 100, 30);//******(left/right, up/down, width,height)
                                label2.setOpaque(true);
                                label2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                label2.setBackground(new java.awt.Color(255, 255, 255));
                                label2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
                                label2.setForeground(new java.awt.Color(18, 33, 139));
                                //   label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                /////////////////////////////////////////////////////////
                                label2.addMouseListener(new MouseAdapter() {
                                    public void mouseClicked(MouseEvent e) {
                                        //   String idpost = ((JButton) e.getSource()).getName();
                                        new otherusers22(usernamee).setVisible(true);
                                        dispose();
                                    }
                                });
                                
                                /////////////////////////////////////////////////////////
                                jhh.add(label2);
                                scrollPane1.add(jhh);
                                flag=false;
                               
                            }//if rs7
                        }//if rs1
                        if(flag){
                            JOptionPane.showMessageDialog(TEXT, "Opps! There is no matches");
                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(TEXT, "Opps! There is no matches");
                        Logger.getLogger(mainpage22.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }//else tb3t firstchar

            } else {

                JOptionPane.showMessageDialog(TEXT, "Enter the Hashtag Name");

            }
        }
    }//GEN-LAST:event_TEXTKeyPressed

    MouseListener mouseListener = new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {

            likeflag = false;
            if (e.getClickCount() == 2) {
                //******************** first we have to know which label makes the action:
                String idpost = ((JLabel) e.getSource()).getText();
                JLabel like = (JLabel) e.getSource();
                //******************* Then we have to open likes table:(we have id post and username)
                try {

                    //******************* open connection with mysql:
                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sys", "root", "123456");
                    String sql2 = "select * from post ORDER BY date DESC";
                    Statement st2 = conn.createStatement();
                    ResultSet rs2 = st2.executeQuery(sql2);
                    String userpost = "";
                    while (rs2.next()) {
                        if (idpost.equals(String.valueOf(rs2.getInt("idpost")))) {
                            userpost = rs2.getString("username");

                        }

                    }
                    //********************* open likes table verfiy if user like this post or not:
                    String sql6 = "select * from likes";

                    Statement st6 = conn.createStatement();
                    ResultSet rs6 = st6.executeQuery(sql6);
                    ImageIcon imgicon1 = new ImageIcon(getClass().getResource("/images0/like.png"));
                    while (rs6.next()) {
                        if (String.valueOf(rs6.getInt("idpost")).equals(idpost)) {
                            if (rs6.getString("username").equals(userpost)) {
                                if (rs6.getString("userlike").equals(usernameorigin)) {
                                    System.out.println("well here we go...");
                                    //************** delete like:
                                    String query = "delete from likes where username = ? AND idpost=?";
                                    PreparedStatement preparedStmt = conn.prepareStatement(query);
                                    preparedStmt.setString(1, userpost);
                                    preparedStmt.setString(2, idpost);
                                    preparedStmt.execute();
                                    imgicon1 = new ImageIcon(getClass().getResource("/images0/emptyh.png"));
                                    likeflag = true;
                                }
                            }
                        }

                    }
                    if (!likeflag) {
                        //********************* insert data into post table:
                        String sql1 = "insert into likes (username,idpost,userlike) values (?,?,?)";
                        PreparedStatement pstmt1 = conn.prepareStatement(sql1);
                        pstmt1.setString(1, userpost);
                        pstmt1.setString(2, idpost);
                        pstmt1.setString(3, usernameorigin);
                        pstmt1.executeUpdate();
                    }
                    Image img1 = imgicon1.getImage();
                    Image imgscale1 = img1.getScaledInstance(like.getWidth(), like.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon scaledIcon1 = new ImageIcon(imgscale1);
                    like.setIcon(scaledIcon1);
                    //like.setOpaque(true);
                    //like.setBackground(new java.awt.Color(255, 255, 255));
                    //like.setToolTipText("Like.");

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    System.err.println(ex);
                }
            }//end if

        }
    };

    /////////////////////////*********************************///////////////////////////////////
    MouseListener mouseListenersave = new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {

            saveflag = false;
            if (e.getClickCount() == 1) {
                //******************** first we have to know which label makes the action:
                String idpost = ((JLabel) e.getSource()).getText();
                JLabel save = (JLabel) e.getSource();
                //******************* Then we have to open likes table:(we have id post and username)
                try {

                    //******************* open connection with mysql:
                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sys", "root", "123456");

                    //********************* open save table verfiy if user like this post or not:
                    String sql6 = "select * from savepost";

                    Statement st6 = conn.createStatement();
                    ResultSet rs6 = st6.executeQuery(sql6);
                    ImageIcon imgicon1 = new ImageIcon(getClass().getResource("/images0/saved.png"));
                    while (rs6.next()) {
                        if (String.valueOf(rs6.getInt("idpost")).equals(idpost)) {
                            if (rs6.getString("username").equals(usernameorigin)) {

                                System.out.println("well here we go222...");
                                //************** delete save:
                                String query = "delete from savepost where username = ? AND idpost=?";
                                PreparedStatement preparedStmt = conn.prepareStatement(query);
                                preparedStmt.setString(1, usernameorigin);
                                preparedStmt.setString(2, idpost);
                                preparedStmt.execute();
                                imgicon1 = new ImageIcon(getClass().getResource("/images0/unsaved.png"));
                                saveflag = true;

                            }
                        }

                    }
                    if (!saveflag) {
                        //********************* insert data into post table:
                        String sql1 = "insert into savepost (idpost,username) values (?,?)";
                        PreparedStatement pstmt1 = conn.prepareStatement(sql1);
                        pstmt1.setString(1, idpost);
                        pstmt1.setString(2, usernameorigin);
                        pstmt1.executeUpdate();
                    }
                    Image img1 = imgicon1.getImage();
                    Image imgscale1 = img1.getScaledInstance(save.getWidth(), save.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon scaledIcon1 = new ImageIcon(imgscale1);
                    save.setIcon(scaledIcon1);

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    System.err.println(ex);
                }
            }
        }
    };

    MouseListener mouseListener2 = new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 1) {
                mainpage22 mainpage = new mainpage22();
                mainpage.dispose();
                userprofile22 profile = new userprofile22();
                profile.setVisible(true);

            }//if

        }

    };

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(explore.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(explore.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(explore.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(explore.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new explore().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TEXT;
    private javax.swing.JLabel back;
    private javax.swing.JPanel base;
    private javax.swing.JLabel close;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel min;
    private javax.swing.JLabel out;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JLabel search;
    // End of variables declaration//GEN-END:variables
}
